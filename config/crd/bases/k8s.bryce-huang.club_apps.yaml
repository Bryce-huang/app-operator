
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: apps.k8s.bryce-huang.club
spec:
  group: k8s.bryce-huang.club
  names:
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: App is the Schema for the apps API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AppSpec defines the desired state of App
          properties:
            context:
              description: ingress 访问上下文，如：/xxx
              type: string
            host:
              description: ingress 域名
              type: string
            image:
              description: 镜像名称
              type: string
            replicas:
              description: 副本数量
              format: int32
              type: integer
            svcPort:
              format: int32
              type: integer
          required:
          - context
          - host
          - image
          - replicas
          - svcPort
          type: object
        status:
          description: AppStatus defines the observed state of App
          properties:
            deployStatus:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this deployment.
                  format: int32
                  type: integer
                collisionCount:
                  description: Count of hash collisions for the Deployment. The Deployment
                    controller uses this field as a collision avoidance mechanism
                    when it needs to create the name for the newest ReplicaSet.
                  format: int32
                  type: integer
                conditions:
                  description: Represents the latest available observations of a deployment's
                    current state.
                  items:
                    description: DeploymentCondition describes the state of a deployment
                      at a certain point.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: The last time this condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                observedGeneration:
                  description: The generation observed by the deployment controller.
                  format: int64
                  type: integer
                readyReplicas:
                  description: Total number of ready pods targeted by this deployment.
                  format: int32
                  type: integer
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    deployment (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this deployment.
                    This is the total number of pods that are still required for the
                    deployment to have 100% available capacity. They may either be
                    pods that are running but not yet available or pods that still
                    have not been created.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    deployment that have the desired template spec.
                  format: int32
                  type: integer
              type: object
            ingressStatus:
              description: IngressStatus describe the current state of the Ingress.
              properties:
                loadBalancer:
                  description: LoadBalancer contains the current status of the load-balancer.
                  properties:
                    ingress:
                      description: Ingress is a list containing ingress points for
                        the load-balancer. Traffic intended for the service should
                        be sent to these ingress points.
                      items:
                        description: 'LoadBalancerIngress represents the status of
                          a load-balancer ingress point: traffic intended for the
                          service should be sent to an ingress point.'
                        properties:
                          hostname:
                            description: Hostname is set for load-balancer ingress
                              points that are DNS based (typically AWS load-balancers)
                            type: string
                          ip:
                            description: IP is set for load-balancer ingress points
                              that are IP based (typically GCE or OpenStack load-balancers)
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            pods:
              items:
                properties:
                  ip:
                    type: string
                  name:
                    type: string
                  node:
                    properties:
                      ip:
                        type: string
                      name:
                        type: string
                    required:
                    - ip
                    - name
                    type: object
                required:
                - ip
                - name
                - node
                type: object
              type: array
            svcStatus:
              description: ServiceStatus represents the current status of a service.
              properties:
                loadBalancer:
                  description: LoadBalancer contains the current status of the load-balancer,
                    if one is present.
                  properties:
                    ingress:
                      description: Ingress is a list containing ingress points for
                        the load-balancer. Traffic intended for the service should
                        be sent to these ingress points.
                      items:
                        description: 'LoadBalancerIngress represents the status of
                          a load-balancer ingress point: traffic intended for the
                          service should be sent to an ingress point.'
                        properties:
                          hostname:
                            description: Hostname is set for load-balancer ingress
                              points that are DNS based (typically AWS load-balancers)
                            type: string
                          ip:
                            description: IP is set for load-balancer ingress points
                              that are IP based (typically GCE or OpenStack load-balancers)
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
          required:
          - pods
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
